name: management
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  #schedule:
  #  - cron: '45 */1 * * *'
  workflow_run:
    workflows: ["sb config verification"]  # 指定依赖的工作流名称
    types:
      - completed  # 只在工作流完成时触发

jobs:
  management:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: list newly updated files
        run: |
          cd /home/runner/work/Honeybee/Honeybee/sub
          pwd
          echo "Generated at: $(date)" > sub.txt  # 添加时间戳作为内容
          find . -type f \( -iname "f*.json" -o -iname "k*.json" \) -mmin -60 >> sub.txt
          cat sub.txt
        continue-on-error: true

      - name: remove outdated files
        run: |
          cd /home/runner/work/Honeybee/Honeybee/sub
          pwd
          find . -type f \( -name "f*.json" -o -name "k*.json" \) -mtime +5 -exec rm -f {} \;
        continue-on-error: true

      # 2. 删除匹配 f*_*.json 的文件
      - name: Delete files matching pattern
        run: |
          rm -f ./f*_*.json  # 删除匹配 f*_*.json 的文件
          rm -f ./k*_*.json  # 删除匹配 f*_*.json 的文件
        continue-on-error: true

      - name: Git Setup
        run: |
          git config --global user.email "wanghz518@gmail.com"
          git config --global user.name "shenmyisi"

      - name: Check for changes
        id: verify_diff
        run: |
          git status --porcelain
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes_exist=true" >> $GITHUB_OUTPUT
          else
            echo "changes_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push
        if: steps.verify_diff.outputs.changes_exist == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update sub.txt with new content"
          file_pattern: 'sub/sub.txt'
