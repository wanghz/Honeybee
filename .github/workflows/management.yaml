name: management
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  #schedule:
  #  - cron: '45 */1 * * *'
  workflow_run:
    workflows: ["sb config verification"]  # 指定依赖的工作流名称
    types:
      - completed  # 只在工作流完成时触发
jobs:
  management:
    runs-on: ubuntu-latest
    steps:
      - name: 获取最近60分钟变更的JSON文件
        uses: tj-actions/changed-files@v42  # 使用最新版本
        id: changed-files
        with:
          # 时间范围配置
          since_last_commit: false
          since: '60 minutes ago'
          # 文件过滤规则
          pattern: |
            **/f*.json
            **/k*.json
            **/s*.*
          exclude_pattern: |
            **/spl*.json
          # 输出配置
          json: true          # 生成JSON格式结果
          output_file: sub.txt  # 保存到文件（可选）
      - uses: actions/checkout@main          
      - name: list newly updated files
        run: |
          cd ./sub
          pwd
          echo "Generated at: $(date)" >> sub.txt  # 添加时间戳作为内容
          #find . -type f \( -iname "f*.json" -o -iname "k*.json" -o \( -iname "s*.json" -a ! -iname "spl*.json" \) \) -mmin -60 >> sub.txtt
          #cat sub.txt
        continue-on-error: true      
      - name: 处理匹配的文件
        run: |
          # 读取Action输出的文件列表
          echo "匹配的文件：${{ steps.changed-files.outputs.all_changed_files }}"
          # 进一步操作（例如删除旧文件）
          while IFS= read -r file; do
            echo "处理文件: $file"
            #rm "$file"  # 根据需求执行删除
          done <<< "${{ steps.changed-files.outputs.all_changed_files }}"        

      - name: Git Setup
        run: |
          git config --global user.email "wanghz518@gmail.com"
          git config --global user.name "shenmyisi"

      - name: Check for changes
        id: verify_diff
        run: |
          git status --porcelain
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes_exist=true" >> $GITHUB_OUTPUT
          else
            echo "changes_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push
        if: steps.verify_diff.outputs.changes_exist == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update sub.txt with new content"
          file_pattern: 'sub/sub.txt'
